{"ast":null,"code":"var _jsxFileName = \"/home/tuan/pomodoro-app/frontend/src/components/Statistics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = () => {\n  _s();\n  const [statistics, setStatistics] = useState([]);\n  const [dailySessions, setDailySessions] = useState(0);\n  useEffect(() => {\n    axios.get('http://localhost:5000/statistics').then(response => {\n      if (response.data) {\n        setStatistics(response.data);\n        calculateDailySessions(response.data);\n      }\n    }).catch(error => console.log(error));\n  }, []);\n  const calculateDailySessions = stats => {\n    const today = new Date().toISOString().split('T')[0];\n    const todaySessions = stats.filter(stat => stat.date.startsWith(today)).reduce((acc, stat) => acc + stat.sessionsCompleted, 0);\n    setDailySessions(todaySessions);\n  };\n  const getWeeklyData = stats => {\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const weeklyData = new Array(7).fill(0);\n    stats.forEach(stat => {\n      const day = new Date(stat.date).getDay();\n      weeklyData[day] += stat.sessionsCompleted;\n    });\n    return daysOfWeek.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bar\",\n      style: {\n        height: `${weeklyData[index] * 20}px`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this));\n  };\n  const getMonthlyData = stats => {\n    const daysInMonth = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate();\n    const monthlyData = new Array(daysInMonth).fill(0);\n    stats.forEach(stat => {\n      const day = new Date(stat.date).getDate();\n      monthlyData[day - 1] += stat.sessionsCompleted;\n    });\n    return monthlyData.map((count, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-day\",\n      children: [index + 1, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"(\", count, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"statistics\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Pomodoro Sessions: \", dailySessions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Weekly Summary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: getWeeklyData(statistics)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Monthly Summary:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar\",\n      children: getMonthlyData(statistics)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Achievements:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"achievements\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge\",\n        children: \"\\uD83C\\uDFC5 Early Bird\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"badge\",\n        children: \"\\uD83C\\uDFC5 Consistency\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Statistics, \"fyHn9ZFcNdI14pDEJIZJysLk330=\");\n_c = Statistics;\nexport default Statistics;\nvar _c;\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Statistics","_s","statistics","setStatistics","dailySessions","setDailySessions","get","then","response","data","calculateDailySessions","catch","error","console","log","stats","today","Date","toISOString","split","todaySessions","filter","stat","date","startsWith","reduce","acc","sessionsCompleted","getWeeklyData","daysOfWeek","weeklyData","Array","fill","forEach","day","getDay","map","index","className","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","getMonthlyData","daysInMonth","getFullYear","getMonth","getDate","monthlyData","count","_c","$RefreshReg$"],"sources":["/home/tuan/pomodoro-app/frontend/src/components/Statistics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Statistics = () => {\n  const [statistics, setStatistics] = useState([]);\n  const [dailySessions, setDailySessions] = useState(0);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/statistics')\n      .then(response => {\n        if (response.data) {\n          setStatistics(response.data);\n          calculateDailySessions(response.data);\n        }\n      })\n      .catch(error => console.log(error));\n  }, []);\n\n  const calculateDailySessions = (stats) => {\n    const today = new Date().toISOString().split('T')[0];\n    const todaySessions = stats.filter(stat => stat.date.startsWith(today)).reduce((acc, stat) => acc + stat.sessionsCompleted, 0);\n    setDailySessions(todaySessions);\n  };\n\n  const getWeeklyData = (stats) => {\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const weeklyData = new Array(7).fill(0);\n    stats.forEach(stat => {\n      const day = new Date(stat.date).getDay();\n      weeklyData[day] += stat.sessionsCompleted;\n    });\n    return daysOfWeek.map((day, index) => (\n      <div key={index} className=\"bar\" style={{ height: `${weeklyData[index] * 20}px` }}>\n        <span>{day}</span>\n      </div>\n    ));\n  };\n\n  const getMonthlyData = (stats) => {\n    const daysInMonth = new Date(new Date().getFullYear(), new Date().getMonth() + 1, 0).getDate();\n    const monthlyData = new Array(daysInMonth).fill(0);\n    stats.forEach(stat => {\n      const day = new Date(stat.date).getDate();\n      monthlyData[day - 1] += stat.sessionsCompleted;\n    });\n    return monthlyData.map((count, index) => (\n      <div key={index} className=\"calendar-day\">\n        {index + 1} <span>({count})</span>\n      </div>\n    ));\n  };\n\n  return (\n    <div className=\"statistics\">\n      <h2>Today:</h2>\n      <p>Pomodoro Sessions: {dailySessions}</p>\n      <h3>Weekly Summary:</h3>\n      <div className=\"chart\">\n        {getWeeklyData(statistics)}\n      </div>\n      <h3>Monthly Summary:</h3>\n      <div className=\"calendar\">\n        {getMonthlyData(statistics)}\n      </div>\n      <h3>Achievements:</h3>\n      <div className=\"achievements\">\n        <span className=\"badge\">üèÖ Early Bird</span>\n        <span className=\"badge\">üèÖ Consistency</span>\n        {/* Add more badges as needed */}\n      </div>\n    </div>\n  );\n};\n\nexport default Statistics;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}